on:
  push:

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false


  build:
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - run: python -m pip install -U pip
    - run: python -m pip install -r requirements.txt pyinstaller


    ### SOURCE?
    - name: Package source
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      run: python setup.py sdist

    
    ### WINDOWS?
    - name: Package Windows app Application
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      uses: JackMcKew/pyinstaller-action-windows@main
      with:
        path: .
  

    ## BUILD
    - run: pyinstaller build.spec

    
    
    


    # - name: Upload Files to a GitHub Release (Windows)
    #   if: ${{ matrix.platform == 'windows-latest' }}
    #   uses: svenstaro/upload-release-action@2.2.1
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: build\${{ env.BUILD_TYPE }}\main.exe
    #     asset_name: main-windows_amd64-python${{ matrix.python-version }}.exe
    #     tag: latest
    #     overwrite: true
    #     prerelease: true
    #     body: "${{ env.BUILD_TYPE }} for ${{ matrix.platform }}"

    

    # # and finally do an upload!
    # - name: Upload release assets
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ needs.create_release.outputs.upload_url }}
    #     # This is how it will be named on the release page. Put hatever name
    #     # you like, remember that they need to be different for each platform.
    #     # You can choose any build matrix parameters. For Rust I use the
    #     # target triple.
    #     asset_name: Mastotron-${{ matrix.os }}
    #     # The path to the file you want to upload.
    #     asset_path: ./dist/MastotronApp
    #     # probably you will need to change it, but most likely you are
    #     # uploading a binary file
    #     asset_content_type: application/octet-stream



    - uses: actions/upload-artifact@v2
      with:
        path: dist/*
